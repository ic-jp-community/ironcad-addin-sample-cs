<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>